volumes:
  keycloak-db: { }
  keycloak-provisioning: { }

services:

  engine:
    image: ghcr.io/noumenadigital/npl-integrations/engine:latest
    build:
      context: npl
    ports:
      - "12000:12000"
    environment:
      ENGINE_DEV_MODE: ${DEV_MODE:-false}
      ENGINE_ALLOWED_ISSUERS: http://keycloak:11000/realms/${VITE_NC_APP_NAME:-nplintegrations}
      ENGINE_DB_URL: "jdbc:postgresql://engine-db:5432/engine"
      ENGINE_DB_USER: npl-integrations
      ENGINE_DB_PASSWORD: secret
      ENGINE_DB_HISTORY_USER: history
      ENGINE_DB_HISTORY_SCHEMA: history
      ENGINE_DB_READ_MODEL_USER: postgraphile
      ENGINE_ISSUER_OVERRIDE: http://keycloak:11000/realms/${VITE_NC_APP_NAME:-nplintegrations}
      SWAGGER_ENGINE_URL: http://localhost:12000
      SWAGGER_SECURITY_AUTH_URL: http://localhost:11000/realms/${VITE_NC_APP_NAME:-nplintegrations}
      SWAGGER_SECURITY_CLIENT_ID: ${VITE_NC_APP_NAME:-nplintegrations}
    depends_on:
      engine-db:
        condition: service_started
      keycloak:
        condition: service_healthy
      keycloak-provisioning:
        condition: service_completed_successfully

  engine-db:
    image: postgres:14.4-alpine
    mem_limit: 256m
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: engine
      ENGINE_DB_USER: npl-integrations
      ENGINE_DB_PASSWORD: secret
      HISTORY_DB_USER: history
      HISTORY_DB_PASSWORD: secret
      HISTORY_DB_SCHEMA: history
      READ_MODEL_DB_USER: postgraphile
      READ_MODEL_DB_PASSWORD: secret
    volumes:
      - ./db_init/db_init.sh:/docker-entrypoint-initdb.d/db_init.sh
    healthcheck:
      test: pg_isready -U postgres
      interval: 1s
      timeout: 5s
      retries: 50

  read-model:
    image: ghcr.io/noumenadigital/images/read-model:${PLATFORM_VERSION}
    ports:
      - "15000:15000"
    environment:
      READ_MODEL_PORT: 15000
      READ_MODEL_DB_URL: postgres://postgraphile:secret@engine-db:5432/engine
      READ_MODEL_DB_USER: postgraphile
      READ_MODEL_DB_SCHEMA: noumena
      READ_MODEL_ALLOWED_ISSUERS: >
        http://keycloak:11000/realms/${VITE_NC_APP_NAME:-nplintegrations},
        http://keycloak:11000,
        http://localhost:11000/realms/${VITE_NC_APP_NAME:-nplintegrations}
      READ_MODEL_ENGINE_HEALTH_ENDPOINT: "http://engine:12000/actuator/health"
      READ_MODEL_ENGINE_HEALTH_TIMEOUT_SECONDS: 250
    depends_on:
      engine-db:
        condition: service_started
      keycloak:
        condition: service_healthy
      keycloak-provisioning:
        condition: service_completed_successfully

  keycloak-provisioning:
    image: ghcr.io/noumenadigital/npl-integrations/keycloak-provisioning:latest
    build:
      context: keycloak-provisioning
    command: /local.sh
    volumes:
      - keycloak-provisioning:/state
    env_file:
      - .env
    environment:
      KEYCLOAK_USER: ${KEYCLOAK_ADMIN}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-welcome}
      KEYCLOAK_URL: http://keycloak:11000
      TF_VAR_default_password: ${SEED_TEST_USERS_PASSWORD:-welcome}
      TF_VAR_systemuser_secret: super-secret-system-security-safe
      TF_VAR_app_name: ${VITE_NC_APP_NAME:-nplintegrations}
    depends_on:
      keycloak:
        condition: service_healthy

  keycloak:
    image: ghcr.io/noumenadigital/npl-integrations/keycloak:latest
    build:
      context: keycloak
    command: |
      start
      --spi-events-listener-jboss-logging-success-level=info
      --spi-events-listener-jboss-logging-error-level=error
      --hostname-strict=false
      --health-enabled=true
      --http-enabled=true
      --metrics-enabled=true
      --db=postgres
      --hostname-admin=http://keycloak:11000
      --hostname=http://keycloak:11000
    ports:
      - "11000:11000"
      - "9000:9000"
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-welcome}
      KC_DB_URL: jdbc:postgresql://keycloak-db/postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: testing
      KC_HEALTH_ENABLED: "true"
      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: 11000
      KC_HOSTNAME: keycloak
    depends_on:
      keycloak-db:
        condition: service_started
    healthcheck:
      test: curl http://keycloak:9000/health || exit 1
      interval: 1s
      retries: 60

  keycloak-db:
    image: postgres:14.4-alpine
    mem_limit: 256m
    ports:
      - "11040:5432"
    volumes:
      - keycloak-db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: testing
      ENV: DOCKER
    healthcheck:
      test: pg_isready -U postgres
      interval: 1s
      timeout: 5s
      retries: 50

  webapp:
    image: ghcr.io/noumenadigital/npl-integrations/webapp:latest
    build:
      context: .
      dockerfile: ./webapp/Dockerfile
    ports:
      - "8090:8080"
    depends_on:
      nginx-proxy:
        condition: service_started

  nginx-proxy:
    image: nginx:latest
    ports:
      - "15001:15001"
      - "12001:12001"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/snippets:/etc/nginx/snippets
    depends_on:
      engine:
        condition: service_healthy
      read-model:
        condition: service_started

  inspector:
    image: ghcr.io/noumenadigital/packages/inspector:latest
    env_file:
      - .env
    environment:
      GQL_ENDPOINT: http://localhost:15001/graphql
      KEYCLOAK_URL: http://keycloak:11000
      KEYCLOAK_REALM: ${VITE_NC_APP_NAME:-nplintegrations}
      KEYCLOAK_CLIENT_ID: ${VITE_NC_APP_NAME:-nplintegrations}
    depends_on:
      nginx-proxy:
        condition: service_started
    ports:
      - "8070:8080"

  python-listener:
    image: ghcr.io/noumenadigital/npl-integrations/python-service:latest
    build:
      context: .
      dockerfile: ./python-listener/Dockerfile
    environment:
      ENV: DOCKER
      VITE_NC_APP_NAME: ${VITE_NC_APP_NAME:-nplintegrations}
    depends_on:
      engine:
        condition: service_healthy

  streamlit-ui:
    image: ghcr.io/noumenadigital/npl-integrations/streamlit-ui:latest
    build:
      context: .
      dockerfile: ./streamlit-ui/Dockerfile
    ports:
      - "8080:8501"
    environment:
      ENV: DOCKER
    depends_on:
      engine:
        condition: service_healthy
