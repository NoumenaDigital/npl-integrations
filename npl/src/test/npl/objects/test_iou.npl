package objects

use iou.Iou

const ISSUER = 'issuer';
const PAYEE = 'payee';

@test
function test_initial_amount_owed(test: Test) -> {
    var iou = Iou[ISSUER, PAYEE]("iou 1", 100);

    test.assertEquals(100, iou.amountOwed, "Amount owed should equal initial value");
};

@test
function test_pay_negative_amount(test: Test) -> {
    var iou = Iou[ISSUER, PAYEE]("iou 2", 100);

    test.assertFails(function() -> iou.pay[ISSUER](-10), "Paying negative amounts should fail");
};

@test
function test_overpaying(test: Test) -> {
    var iou = Iou[ISSUER, PAYEE]("iou 2", 100);

    test.assertFails(function() -> iou.pay[ISSUER](101), "Overpaying should fail");
};

@test
function test_amount_owed_after_pay(test: Test) -> {
    var iou = Iou[ISSUER, PAYEE]("iou 2", 100);
    iou.pay[ISSUER](50);

    test.assertEquals(100, iou.amountOwed, "Amount owed unchanged after yet unconfirmed payment");
};



@test
function test_amount_owed_after_confirmation(test: Test) -> {
    var iou = Iou[ISSUER, PAYEE]("iou 2", 100);
    iou.pay[ISSUER](50);
    iou.confirmPayment[PAYEE]();

    test.assertEquals(50, iou.amountOwed, "Amount owed changed after payment confirmation");
};


